package ${restControllerPackage};
import ${modelPackage}.${beanName};
import ${servicePackage}.${beanName}Service;
import org.springframework.validation.annotation.Validated;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import com.huafagroup.common.core.domain.AjaxResult;
import com.baomidou.mybatisplus.core.conditions.Wrapper;
import java.util.List;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.Page;
/**
* <p>
    * </p>
*
* @author ${author}
* @date ${dateTime}
* @version
*/
@RestController
#set($apiModuleName = $tableName.replace("_", "-"))
@RequestMapping(value = "/api/call/${apiModuleName}")
public class ${beanName}Controller {

private final Logger logger = LoggerFactory.getLogger(this.getClass());

@Autowired
private ${beanName}Service service;


@ApiOperation(value="获取单条记录", notes="根据url的id来获取详细信息")
@RequestMapping(value = "/get",method = RequestMethod.GET)
public AjaxResult get(String id){
${beanName} item=  service.getById(id);
if(item!=null){
return AjaxResult.success(item);
}else {
return AjaxResult.error("找不到该记录");
}
}


@ApiOperation(value="获取列表记录")
@RequestMapping(value = "/getlist",method = RequestMethod.GET)
public AjaxResult getList(){
return AjaxResult.success(service.list());
}

@ApiOperation(value="新增")
@RequestMapping(value = "/create",method = RequestMethod.POST)
public AjaxResult create(@RequestBody @Validated ${beanName} item){
boolean bl = service.save(item);
if(bl){
return AjaxResult.success("新增成功");
}else{
return AjaxResult.error("新增失败");
}
}

@ApiOperation(value="更新")
@RequestMapping(value = "/update",method = RequestMethod.POST)
public AjaxResult update(@RequestBody @Validated ${beanName} item){
boolean bl = service.updateById(item);
if(bl){
return AjaxResult.success("更新成功");
}else{
return AjaxResult.error("更新失败");
}
}

@ApiOperation(value="按ID删除")
@RequestMapping(value = "/deletebyid",method = RequestMethod.POST)
public AjaxResult delete(String id){
boolean bl =  service.removeById(id);
if(bl){
return AjaxResult.success("删除成功");
}else{
return AjaxResult.error("删除失败");
}
}
}
